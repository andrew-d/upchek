<!DOCTYPE html>
<html>
<head>
<title>upchek</title>

<style>
body {
  font-family: monospace;
}

table {
  border-collapse: collapse;
  width: 100%;
}

th, td {
  border: 1px solid black;
  padding: 8px;
}

td.code-col {
  text-align: center;
}
td.code-col-ok {
  background-color: green;
}
td.code-col-err {
  background-color: red;
}

.refresh-control {
  position: absolute;
  top: 10px;
  right: 10px;
}

select {
  font-family: monospace;
}
</style>
</head>

{{/* define some helper templates */}}
{{ define "checkmark" }}
  {{if .}}
    <span style="color: green">&#x2713;</span>
  {{else}}
    <span style="color: red">&#x2717;</span>
  {{end}}
{{end}}

{{ define "time-td" }}
  <td title="Unix timestamp: {{.Unix}}">
    {{.Format "2006-01-02 15:04:05"}}
  </td>
{{end}}

<body>

<div class="refresh-control">
  <label for="refrech-interval">Auto-refresh: </label>
  <select id="refresh-interval" onchange="setRefreshInterval()">
    <option value="0">Off</option>
    <option value="5">5s</option>
    <option value="10">10s</option>
    <option value="30">30s</option>
    <option value="60">60s</option>
  </select>
</div>

<h1>upchek {{ template "checkmark" .GlobalOk }}</h1>

<h2>local {{ template "checkmark" .LocalOk }}</h2>
<table>
  <thead>
    <tr>
      <th>Script</th>
      <th>Last Run</th>
      <th>Exit Code</th>
      <th>Output</th>
      <th>Error</th>
    </tr>
  </thead>
  <tbody>
  {{range .Results}}
  <tr>
    <td>{{.Name}}</td>
    {{ template "time-td" .LastRun }}
    <td class="code-col {{if .IsSuccess}}code-col-ok{{else}}code-col-err{{end}}">
      {{.ExitCode}}
    </td>
    <td><pre>{{.Stdout}}</pre></td>
    <td><pre>{{.Stderr}}</pre></td>
  </tr>
  {{end}}
</table>

{{/*
  collect top-level variables for remote results; we use the 'with' below to
  ensure that we don't display the header or table unless we have remotes
*/}}
{{$remote_results := .RemoteResults}}
{{$remote_errors := .RemoteErrors}}
{{$remote_status := .RemoteStatus}}
{{$remote_ok := .RemoteOk}}
{{with .RemoteAddrs}}
  <h2>Remote Results {{ template "checkmark" $remote_ok }}</h2>
  {{range $host := .}}
    {{$results := index $remote_results $host}}
    <h3>{{ $host }} {{ template "checkmark" (index $remote_status $host) }}</h3>

    {{with $rerr := index $remote_errors $host}}
      <p style="border: 2px solid red">error: {{$rerr}}</p>
    {{end}}
    {{with $results}}
      <table>
        <thead>
          <tr>
            <th>Script</th>
            <th>Last Run</th>
            <th>Exit Code</th>
            <th>Output</th>
            <th>Error</th>
          </tr>
        </thead>
        <tbody>
        {{range .}}
        <tr>
          <td>{{.Name}}</td>
          {{ template "time-td" .LastRun }}
          <td class="code-col {{if .IsSuccess}}code-col-ok{{else}}code-col-err{{end}}">
            {{.ExitCode}}
          </td>
          <td><pre>{{.Stdout}}</pre></td>
          <td><pre>{{.Stderr}}</pre></td>
        </tr>
        {{end}}
      </table>
    {{end}}
  {{end}}
{{end}}

<script>
let refreshTimer;

function setRefreshInterval() {
  // Clear any existing timer
  if (refreshTimer) {
    clearInterval(refreshTimer);
    refreshTimer = null;
  }

  // Get the selected refresh interval value
  const intervalValue = document.getElementById('refresh-interval').value;
  const seconds = parseInt(intervalValue, 10);

  // Set up new timer if interval is greater than 0
  if (seconds > 0) {
    refreshTimer = setInterval(() => {
      window.location.reload();
    }, seconds * 1000);
  }

  // Store the user's preference in localStorage
  localStorage.setItem('upchek-refresh-interval', intervalValue);
}

// Initialize the dropdown based on saved preference
document.addEventListener('DOMContentLoaded', () => {
  const savedInterval = localStorage.getItem('upchek-refresh-interval');
  if (savedInterval) {
    document.getElementById('refresh-interval').value = savedInterval;
    setRefreshInterval();
  }
});
</script>
</body>
</html>
